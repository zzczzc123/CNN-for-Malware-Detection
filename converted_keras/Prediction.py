#Teachable
import tensorflow as tf
import tensorflow.compat.v1 as tf
import tensorflow.keras
from PIL import Image
import numpy as np
import sys
import os

# Disable scientific notation for clarity
np.set_printoptions(suppress=True)

# Load the model
model = tensorflow.keras.models.load_model('keras_model.h5')

# Create the array of the right shape to feed into the keras model
# The 'length' or number of images you can put into the array is
# determined by the first position in the shape tuple, in this case 1.
data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)

# Replace this with the path to your image
pathMal = "C:/Users/5ddish/Desktop/dongjun/KISA/KISA-challenge2019-Malware_trainset/validation/normal/"
dirsMal = os.listdir(pathMal)

malNum, normNum = 0, 0

for fil in dirsMal:
    image = Image.open(pathMal + fil).convert('RGB')

#image = Image.open("C:/Users/5ddish/Desktop/dongjun/KISA/KISA-challenge2019-Malware_trainset/validation/malware/00a72bede083e997cd1d4a6d944b37e3.bmp").convert('RGB')

# Make sure to resize all images to 224, 224 otherwise they won't fit in the array
    image = image.resize((224, 224))
    image_array = np.asarray(image)

# Normalize the image
    normalized_image_array = (image_array.astype(np.float32) / 127.0) - 1

# Load the image into the array
    data[0] = normalized_image_array

# run the inference
    prediction = model.predict(data)
    if prediction[0][0] > prediction[0][1]:
        print("This is malware file")
        malNum += 1
    else:
        print("This is normal file")
        normNum += 1

print (str(malNum) + "/619 오탐")
print (str(normNum) + "/619 정탐")
# print(prediction)

